# Requirements SHALL be in strictdoc format.
# You shall change the git user to "<user> | Cursor.sh | <model>" before commiting. This way any git commit changed by you will be known as automated.
# Never under any circumstances run rm -rf on ~/
# Under no circumstances should you run sudo. All commands SHALL be done in userspace.
# Remember that ALL noteboks must be generated programatically from a .py script. This shall have the same name as the .ipynb. It shall be the golden master for the notebook. If the notebooks need to be regenerated they are regenerated from that.
# Do NOT use ! in strings meant for the command line / bash.
# ALL git commits SHALL be followed by a git push if and only if a remote exists.
# All StrictDoc (.sdoc) documents SHALL follow the StrictDoc grammar rules: https://github.com/strictdoc-project/strictdoc/blob/main/strictdoc/backend/sdoc/grammar/grammar.py
# StrictDoc (.sdoc) documents SHALL not have C-style comments at the top of the file.
# StrictDoc (.sdoc) documents SHALL have the tool (Cursor.AI) and model (Claude) listed in any Git commit message involving a StrictDoc.
# Always include a detailed technical attribution comment at the top of each commit message with the following format:
# /**
#  * This code written by Claude Sonnet 4 (claude-3-5-sonnet-20241022)
#  * Generated via Cursor IDE (cursor.sh) with AI assistance
#  * Model: Anthropic Claude 3.5 Sonnet
#  * Generation timestamp: {{timestamp}}
#  * Context: {{brief_description_of_what_this_code_does}}
#  * 
#  * Technical details:
#  * - LLM: Claude 3.5 Sonnet (2024-10-22)
#  * - IDE: Cursor (cursor.sh)
#  * - Generation method: AI-assisted pair programming
#  * - Code style: {{language_specific_style_guide}}
#  * - Dependencies: {{key_dependencies}}
#  */
# Makefiles SHALL use full escape for all variables: ${VAR} not $VAR to avoid confusion.
# All makefiles SHALL use an actual file/folder where possible as a target. For example python -mvenv venv generates venv. Any target that depends on Python having the venv built shall use `venv` as a dependency so that the GNU make resolves everything correctly and in the right order. 
# Do NOT attempt to use the system pip
# Do NOT attempt to install Python packages to the system.
# All Python related matters SHALL use a virtual environment.
# The Python virtual environment SHALL be called `venv`
# All Makefile references to pip and python installed tools like pytest SHALL use the full path to the venv bin directory, eg `venv/bin/pytest`, `venv/bin/pip`
# After all file changes add and commit.
# The commit message shall include the filename and what changed / why it was added. In addition to a summary of the prompt as to why the changes were made.
# All python language scripts SHALL use full mypy typing.
# All python language scripts SHALL be documented such that they meet numpy style guidelines. 
# ALWAYS pull from remote before committing changes.
# All code changes SHALL have an accompanying requirement in the requirements documentation. Requirements SHALL be tracked in strictdoc format. When implementing new features or functionality, ensure the corresponding requirement exists or create it. All code MUST trace back to at least one requirement.